{:deps {:aliases
        [;; TODO rename
         :doctor-deps]}

 :nrepl {:port 3335
         :middleware
         [cider-nrepl.plugin/middleware
          refactor-nrepl.middleware/wrap-refactor]}

 :builds
 {
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;; doctor
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;

  :doctor-app
  {:target           :browser
   :output-dir       "public/js/compiled"
   :asset-path       "/js/compiled"
   :modules          {:main {:init-fn doctor.ui.core/init}}
   :compiler-options {:output-feature-set :es-next}

   :build-hooks
   [(plasma.uix.hot-reload/compile-prepare!)
    (plasma.uix.hot-reload/compile-finish!)]

   :dev {:closure-defines {:plasma.uix.hot-reload? true}}

   :closure-defines
   {doctor.ui.events.tubes/SERVER_HOST #shadow/env "SERVER_HOST"
    doctor.ui.events.tubes/SERVER_PORT #shadow/env "SERVER_PORT"}

   :devtools
   {:http-root   "public"
    :http-port   3333
    :loader-mode :eval
    :after-load  doctor.ui/mount-root
    :repl-pprint true}}

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;; expo
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;

  :expo-app
  {:target           :browser
   :output-dir       "expo/public/js/compiled"
   :asset-path       "/js/compiled"
   :modules          {:main {:init-fn expo.ui.core/init}}
   :compiler-options {:output-feature-set :es-next}

   :nrepl {:port 3332}

   :build-hooks
   [(plasma.uix.hot-reload/compile-prepare!)
    (plasma.uix.hot-reload/compile-finish!)]

   :dev {:closure-defines {:plasma.uix.hot-reload? true}}

   :closure-defines
   {expo.ui.events.tubes/SERVER_HOST #shadow/env "SERVER_HOST"
    expo.ui.events.tubes/SERVER_PORT #shadow/env "SERVER_PORT"}

   :devtools
   {:http-root   "expo/public"
    :http-port   4444
    :loader-mode :eval
    :after-load  expo.ui/mount-root
    :repl-pprint true}}}}
